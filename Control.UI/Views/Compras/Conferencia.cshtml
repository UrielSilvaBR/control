@using Control.UI.Models
@model PedidoCompraViewModel
@{
    ViewBag.Title = "Conferencia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <script type="text/javascript">

        var giCount = 1;
        $(document).ready(function () {

            $('#FileUpload1').hide();

            InicializarModalItemPedido();

            $('#btnSalvarPuchaseOrderItem').click(function () {
                EditarItemPedido();
            });

            $("#ddlConfItemProduto").prop("disabled", true);
            $("#PurchaseOrder_ProviderID").prop("disabled", true);

            $('#ddlConfItemProduto').on('change', function (produto) {
                ObterValorUnitarioProduto(produto.val);
            });

            $('#PurchaseOrderItem_QuantityDeliver').focusout(function () {
                var quantidade = $(this).val();
                CalcularItemPedido(quantidade);
            });

            $('#PurchaseOrder_ItemDiscount').focusout(function () {
                ValidarDescontoItemPedido($(this).val());
            });

            var idPedido = $('#PurchaseOrder_Id').val();
            if (idPedido == 0) {
                $('#btnCadastrar').show();
                $('#btnEditar').hide();
            }
            else {
                $('#btnCadastrar').hide();
                $('#btnEditar').show();
            }

            $('#itemConferenciaEdit').on('hidden.bs.modal', function () {
                LimparItemPedido();
            })

            $('#FileUpload1').change(function () {

                // Checking whether FormData is available in browser
                if (window.FormData !== undefined) {

                    var fileUpload = $("#FileUpload1").get(0);
                    var files = fileUpload.files;

                    if (files.length == 0)
                        return false;

                    waitingDialog.show('Importando XML Nota Fiscal de Entrada!', { dialogSize: 'sm', progressType: 'success' });


                    setTimeout(function () {

                        // Create FormData object
                        var fileData = new FormData();

                        // Looping over all files and add it to FormData object
                        for (var i = 0; i < files.length; i++) {
                            fileData.append(files[i].name, files[i]);
                        }

                        // Adding one more key to FormData object
                        fileData.append('username', 'Manas');

                        $.ajax({
                            url: '/Compras/UploadXmlNFe',
                            type: "POST",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: fileData,
                            success: function (result) {
                                waitingDialog.hide();
                                alert(result);
                                $('#FileUpload1').val("");
                            },
                            error: function (err) {
                                waitingDialog.hide();
                                alert(err.statusText);
                            }
                        });
                    }, 2000);
                } else {
                    alert("FormData is not supported.");
                }
            });

            $('#btnImportarXmlNFe').click(function () {
                $('#FileUpload1').click();
            });
        });

        function LimparItemPedido() {
            $("#ddlConfItemProduto").select2().select2("val", '0');
            $('#PurchaseOrderItem_QuantityOrder').val(1);
            $('#PurchaseOrderItem_UnitPrice').val(0);
            $('#PurchaseOrderItem_ItemDiscount').val(0);
            $('#PurchaseOrderItem_QuantityDeliver').val(0);
            $('#PurchaseOrderItem_TotalPrice').val(0);
        }

        function InicializarModalItemPedido() {
            IniciarlizarCamposItemPedido();
            InicializarMascaraItemPedido();
            InicializarCamposReadOnly();
        }

        function IniciarlizarCamposItemPedido() {

            $('#PurchaseOrderItem_ItemDiscount').val(0);
            $('#PurchaseOrderItem_UnitPrice').val(0);
            $('#PurchaseOrderItem_TotalPrice').val(0);

            $('#PurchaseOrderItem_QuantityOrder').val(1);
            $('#PurchaseOrderItem_QuantityOrder').ForceNumericOnly();

            $('#PurchaseOrderItem_QuantityDeliver').val(1);
            $('#PurchaseOrderItem_QuantityDeliver').ForceNumericOnly();

            if (parseInt($('#PurchaseOrderItem_QuantityOrder').val()) == 0)
                $('#PurchaseOrderItem_QuantityOrder').val(1);
        }

        function CalcularItemPedido(quantidade) {
            var valorUnitario = $('#PurchaseOrderItem_UnitPrice').val();
            valorUnitario = valorUnitario.replace("R$", "").replace(",", "").replace(".", ",").trim();
            valorUnitario = Number(valorUnitario.replace(/[^0-9\.]+/g, ""));

            var valorTotal = quantidade * valorUnitario;

            //var valorDesconto = $('#PurchaseOrderItem_ItemDiscount').val();
            //valorDesconto = valorDesconto.replace("R$", "").replace(",", "").replace(".", ",").trim();
            //valorDesconto = Number(valorDesconto.replace(/[^0-9\.]+/g, ""));
            //valorTotal = valorTotal - valorDesconto;

            $('#PurchaseOrderItem_TotalPrice').val(valorTotal);
        }

        function ValidarDescontoItemPedido(pValorDesconto) {
            var valorDesconto = pValorDesconto;
            valorDesconto = valorDesconto.replace("R$", "").replace(",", "").replace(".", ",").trim();
            valorDesconto = Number(valorDesconto.replace(/[^0-9\.]+/g, ""));

            var valorUnitario = $('#PurchaseOrderItem_TotalPrice').val();
            valorUnitario = valorUnitario.replace("R$", "").replace(",", "").replace(".", ",").trim();
            valorUnitario = Number(valorUnitario.replace(/[^0-9\.]+/g, ""));

            if (valorDesconto > valorUnitario) {
                //ShowMessage('<b>Valor do Desconto não pode ser maior que </br>o Valor do Item!</b>', false);
                //$('#itemNotaFiscal').attr('style', 'display:block');
                //$('#itemNotaFiscal').modal('show');
            }



            var valorTotal = valorUnitario - valorDesconto;

            $('#PurchaseOrderItem_TotalPrice').val(valorTotal);
        }

        function InicializarMascaraItemPedido() {

            $('#PurchaseOrderItem_UnitPrice').maskMoney({
                prefix: '',
                allowZero: false,
                allowNegative: false,
                defaultZero: true,
                thousands: '.',
                decimal: ',',
                precision: 2,
                affixesStay: false,
                symbolPosition: 'left'
            });

            $('#PurchaseOrderItem_ItemDiscount').maskMoney({
                prefix: '',
                allowZero: false,
                allowNegative: false,
                defaultZero: true,
                thousands: '.',
                decimal: ',',
                precision: 2,
                affixesStay: false,
                symbolPosition: 'left'
            });

            $('#PurchaseOrderItem_TotalPrice').maskMoney({
                prefix: '',
                allowZero: false,
                allowNegative: false,
                defaultZero: true,
                thousands: '.',
                decimal: ',',
                precision: 2,
                affixesStay: false,
                symbolPosition: 'left'
            });

            $('#PurchaseOrder_TotalValue').maskMoney({
                prefix: '',
                allowZero: false,
                allowNegative: false,
                defaultZero: true,
                thousands: '.',
                decimal: ',',
                precision: 2,
                affixesStay: false,
                symbolPosition: 'left'
            });

            $('#PurchaseOrder_Discount').maskMoney({
                prefix: '',
                allowZero: false,
                allowNegative: false,
                defaultZero: true,
                thousands: '.',
                decimal: ',',
                precision: 2,
                affixesStay: false,
                symbolPosition: 'left'
            });

            $('#PurchaseOrderItem_QuantityOrder').ForceNumericOnly();

            $('#PurchaseOrder_ValidateDate').mask('99/99/9999');
        }

        function InicializarCamposReadOnly() {

            var valorTotalPedido = $('#PurchaseOrder_TotalValue').val();
            if (valorTotalPedido == 0)
                $('#PurchaseOrder_TotalValue').val(0);
            else
                $('#PurchaseOrder_TotalValue').val(valorTotalPedido);

            $("#PurchaseOrder_TotalValue").prop('readonly', true);
            $('#PurchaseOrderItem_TotalPrice').attr('disabled', true);
            $('#PurchaseOrderItem_UnitPrice').attr('disabled', true);

        }

        function IniciarInclusaoPedido() {

            var idPedido = $('#PurchaseOrder_Id').val();

            if (idPedido > 0) {
                IniciarEdicaoPedido();
                return;
            }

            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();

            var Items = new Array();
            var arrayItens = gdvItens.fnGetData();

            if (arrayItens.length == 0) {
                waitingDialog.hide
                ShowMessage('É necessário adicionar Itens!', false);
                return false;
            }

            waitingDialog.show('Salvando Ordem de Compra', { dialogSize: 'sm', progressType: 'success' });

            for (var i = 0; i < arrayItens.length ; i++) {

                Items.push({
                    Id: arrayItens[i][0],
                    IdPedido: arrayItens[i][1],
                    ProductID: arrayItens[i][2],
                    SequencialItem: arrayItens[i][4],
                    QuantityOrder: arrayItens[i][6],
                    QuantityDeliver: arrayItens[i][7],
                    UnitPrice: arrayItens[i][8],
                    ItemDiscount: arrayItens[i][9],
                    TotalPrice: arrayItens[i][10]
                });
            }

            var itensPedido = JSON.stringify(Items);

            $('#itensPedido').val(itensPedido);
        }

        function FinalizarInclusaoPedido(pedido) {

            setTimeout(function () {

                var retornoPedido = pedido.split(';');
                var mensagemRetorno = retornoPedido[0];
                var idPedido = retornoPedido[1];

                if (retornoPedido.length > 1)
                    $('#PurchaseOrder_Id').val(idPedido);

                waitingDialog.hide();
                ShowMessage(mensagemRetorno, true);

                //if (parseInt(idPedido) > 0) {
                //    $.ajax({
                //        url: '/Compras/GetOrderProducts',
                //        data: { OrderID: idPedido },
                //        type: 'GET',
                //        success: function (result) {
                //            $('#table_wrapperz_ItensPedido').html(result);
                //        }
                //    });
                //}

                if (idPedido == 0) {
                    $('#btnCadastrar').show();
                    $('#btnEditar').hide();
                }
                else {
                    $('#btnCadastrar').hide();
                    $('#btnEditar').show();

                    setTimeout(function () {
                        $(location).attr('href', '../Estoque/ConsultaEstoque ');
                    }, 3000);
                }

            }, 1000);
        }

        function IniciarEdicaoPedido() {

            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();

            var Items = new Array();
            var arrayItens = gdvItens.fnGetData();

            if (arrayItens.length == 0) {
                waitingDialog.hide();
                ShowMessage('É necessário adicionar Itens!', false);
                return false;
            }

            waitingDialog.show('Alterando Proposta', { dialogSize: 'sm', progressType: 'success' });

            for (var i = 0; i < arrayItens.length ; i++) {

                Items.push({
                    Id: arrayItens[i][0],
                    IdPedido: arrayItens[i][1],
                    ProductID: arrayItens[i][2],
                    SequencialItem: arrayItens[i][4],
                    QuantityOrder: arrayItens[i][6],
                    QuantityDeliver: arrayItens[i][7],
                    UnitPrice: arrayItens[i][8],
                    ItemDiscount: arrayItens[i][9],
                    TotalPrice: arrayItens[i][10]
                });
            }

            var itensPedido = JSON.stringify(Items);

            $('#itensPedido').val(itensPedido);
        }

        function FinalizarEdicaoPedido(pedido) {

            setTimeout(function () {

                var retornoPedido = pedido.split(';');
                var mensagemRetorno = retornoPedido[0];
                var idPedido = retornoPedido[1];

                if (retornoPedido.length > 1)
                    $('#PurchaseOrder_Id').val(idPedido);

                waitingDialog.hide();
                ShowMessage(mensagemRetorno, true);

                if (parseInt(idPedido) > 0) {

                    $.ajax({
                        url: '/Compras/GetOrderProducts',
                        data: { OrderID: idPedido },
                        type: 'GET',
                        success: function (result) {
                            $('#table_wrapperz_ItensPedido').html(result);
                        }
                    });
                }


                if (idPedido > 0) {
                    $('#btnCadastrar').hide();
                    $('#btnEditar').show();
                }

            }, 1000);
        }

        function ObterValorUnitarioProduto(idProduto) {

            ObterProduto(idProduto, function (produto) {
                $('#PurchaseOrderItem_UnitPrice').val(produto.UnitPrice.toFixed(2));
                $('#PurchaseOrderItem_TotalPrice').val(produto.UnitPrice.toFixed(2));
                CalcularItemPedido($('#PurchaseOrderItem_QuantityOrder').val());
            });
        }

        function ObterProduto(idProduto, produto) {

            if (idProduto == 0) {
                $('#PurchaseOrderItem_UnitPrice').val(0);
                $('#PurchaseOrderItem_TotalPrice').val(0);
                return;
            }

            $.post("/Invoice/GetProducts",
                { ProductID: idProduto },
                function (result) {
                    produto(result);
                });
        }

        function AdicionarItemPedido() {

            //ValidarDescontoItemNotaFiscal($('#OrderProduct_ItemDiscount').val());

            var idProduto = $('#ddlConfItemProduto option:selected').val();

            if (idProduto == 0) {
                ShowMessage('Selecione o Produto para inclusão do Item!', false);
                return;
            }

            var rowEmpty = $('#gdvItensPedidoDeCompras > tbody > tr').find('.dataTables_empty').length == 1;
            var rowCount = $('#gdvItensPedidoDeCompras > tbody > tr').length;

            if (rowEmpty)
                rowCount = rowCount - 1;

            if (giCount > rowCount)
                giCount = giCount;
            else
                giCount = rowCount + 1;


            var descricaoProduto = $('#ddlConfItemProduto option:selected').text();
            var quantidade = $('#PurchaseOrderItem_QuantityOrder').val();
            quantidade = parseFloat(quantidade).toFixed(2);
            quantidade = quantidade.replace(".", ",");
            var precoUnitario = $('#PurchaseOrderItem_UnitPrice').val();
            var quantidadeEntregue = $('#PurchaseOrderItem_QuantityDeliver').val();
            var desconto = $('#PurchaseOrderItem_ItemDiscount').val();
            var precoTotal = $('#PurchaseOrderItem_TotalPrice').val();

            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();
            $(gdvItens).removeClass('table-striped');

            var indiceLinhaAdicionada = gdvItens.fnAddData([
                "0",
                "0",
                idProduto,
                '<a href="javascript:void(0);" onclick="AbrirItemPedido(' + giCount + ');"  ><i class="fa fa-pencil-square-o"  style="padding: 0px 8px;"></i></a>',
                giCount,
                descricaoProduto,
                quantidade,
                precoUnitario,
                desconto,
                precoTotal
            ]);

            var tr = gdvItens.fnGetNodes(indiceLinhaAdicionada);
            $(tr).effect("highlight", { color: "#9fdf9f" }, 2000);

            giCount++;

            AtualizarValorTotalPedido();

            $('#gdvItensPedidoDeCompras_filter').hide();
            //$('#gdvItensPedido_info').hide();
            $('#gdvItensPedidoDeCompras_length').hide();
        }

        function AbrirItemPedido(indiceLinha) {

            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();

            var rowIndex = indiceLinha - 1;

            var items = gdvItens.fnGetData();
            item = items[rowIndex];


            $("#ddlConfItemProduto").select2().select2("val", item[2]);
            var quantidade = parseInt(item[6]);
            $('#PurchaseOrderItem_QuantityOrder').val(quantidade);
            var quantidadeEntregue = parseInt(item[7]);
            $('#PurchaseOrderItem_QuantityDeliver').val(quantidadeEntregue);


            $('#PurchaseOrderItem_UnitPrice').val(item[8]);
            $('#PurchaseOrderItem_ItemDiscount').val(item[9]);
            $('#PurchaseOrderItem_TotalPrice').val(item[10]);

            $('#rowIndexItemPedido').val(rowIndex);

            $("#itemConferenciaEdit").modal('show');
        }

        function EditarItemPedido() {

            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();

            var rowIndex = $('#rowIndexItemPedido').val();

            gdvItens.fnUpdate($('#ddlConfItemProduto option:selected').val(), parseInt(rowIndex), 2);
            gdvItens.fnUpdate($('#ddlConfItemProduto option:selected').text(), parseInt(rowIndex), 6);

            var quantidade = parseFloat($('#PurchaseOrderItem_QuantityOrder').val()).toFixed(2);
            quantidade = quantidade.replace(".", ",");
            gdvItens.fnUpdate(quantidade, parseInt(rowIndex), 6);

            var quantidadeEntregue = parseFloat($('#PurchaseOrderItem_QuantityDeliver').val()).toFixed(2);
            quantidadeEntregue = quantidadeEntregue.replace(".", ",");
            gdvItens.fnUpdate(quantidadeEntregue, parseInt(rowIndex), 7);

            gdvItens.fnUpdate($('#PurchaseOrderItem_UnitPrice').val(), parseInt(rowIndex), 8);
            gdvItens.fnUpdate($('#PurchaseOrderItem_ItemDiscount').val(), parseInt(rowIndex), 9);
            gdvItens.fnUpdate($('#PurchaseOrderItem_TotalPrice').val(), parseInt(rowIndex), 10);

            AtualizarValorTotalPedido();
            gdvItens.fnDraw();

            LimparItemPedido();

            $(gdvItens).removeClass('table-striped');

            var tr = gdvItens.fnGetNodes(rowIndex);
            $(tr).effect("highlight", { color: "#80c1ff" }, 2000);

            $("#itemConferenciaEdit").modal('hide');

        }

        function AtualizarSequencialItemPedido() {
            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();
            var arrayItens = gdvItens.fnGetData();

            for (var i = 0; i < arrayItens.length; i++) {

                gdvItens.fnUpdate('<a href="javascript:void(0);" onclick="AbrirItemPedido(' + (i + 1) + ');"  ><i class="fa fa-pencil-square-o"  style="padding: 0px 8px;"></i></a>', i, 3);
                gdvItens.fnUpdate(i + 1, i, 5);
                //giCount++;
            }
        }

        function AtualizarValorTotalPedido() {
            var gdvItens = $('#gdvItensPedidoDeCompras').dataTable();

            var arrayItens = gdvItens.fnGetData();

            var valorTotalPedido = 0;
            var descontoTotalPedido = 0;

            for (var i = 0; i < arrayItens.length; i++) {

                var valorPedido = arrayItens[i][10];
                valorPedido = valorPedido.replace("R$", "").replace(",", "").replace(".", ",").trim();
                valorPedido = Number(valorPedido.replace(/[^0-9\.]+/g, ""));

                var descontoPedido = arrayItens[i][9];
                descontoPedido = descontoPedido.replace("R$", "").replace(",", "").replace(".", ",").trim();
                descontoPedido = Number(descontoPedido.replace(/[^0-9\.]+/g, ""));

                valorTotalPedido += valorPedido;
                descontoTotalPedido += descontoPedido;
            }

            $('#PurchaseOrder_TotalValue').val(valorTotalPedido);
            $('#PurchaseOrder_Discount').val(descontoTotalPedido);
        }
    </script>
    <style type="text/css">
        .form-horizontal .form-group {
            margin-right: 0px;
            margin-left: 0px;
            margin-bottom: 0px;
        }

        #modal-sucesso .modal-body {
            min-height: 146px;
            color: #074981;
            padding: 50px 50px 0px 200px;
            background: url('../../Content/img/message-success.png') no-repeat 40px 27px;
            font-size: 18px;
            font-family: Segoe UI Light;
        }

        #modal-erro-cenprot .modal-body {
            min-height: 146px;
            color: #074981;
            padding: 50px 50px 0px 200px;
            background: url('../../Content/img/warning.png') no-repeat 40px 27px;
            font-size: 18px;
            font-family: Segoe UI Light;
        }

        #modal-sucesso .modal-dialog {
            width: 495px;
            margin: 130px 475px;
        }

        #modal-erro-cenprot .modal-dialog {
            width: 495px;
            margin: 130px 475px;
        }

        #modal-erro-cenprot, #modal-sucesso .modal-footer {
            border-top: 0px solid #e5e5e5;
            padding: 10px;
        }
    </style>
</head>

<div class="row">
    <div id="breadcrumb" class="col-xs-12">
        <ol class="breadcrumb">
            <li><a href="#">Compras</a></li>
            <li><a href="#">Conferência e Recebimento de Mercadorias</a></li>
        </ol>
    </div>
</div>

<div class="row">
    <!-- BOX -->
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <div class="box-name">
                    <span>Conferência e Recebimento de Mercadorias</span>
                </div>
                <div class="box-icons">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="expand-link">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
                <div class="no-move"></div>
            </div>
            <!-- conteudo -->
            <div class="box-content">

                @using (Ajax.BeginForm("SaveConferencia", new { Controller = "Compras" },
new AjaxOptions { OnBegin = "IniciarInclusaoPedido", OnSuccess = "FinalizarInclusaoPedido", OnFailure = "ShowHTTPException" }, new { @class = "form-horizontal", @id = "frmCreatePedido" }))
                {
                    <div class="row">
                        @Html.HiddenFor(model => model.PurchaseOrder.InsertDate)
                        @Html.HiddenFor(model => model.PurchaseOrder.ProviderPurchaseOrder.Id)
                        @*<div class="form-group col-md-3">
                                @Html.LabelFor(model => model.PurchaseOrder.Id )
                                @Html.EditorFor(p => p.PurchaseOrder.Id, new { htmlAttributes = new { @class = "form-control", @type = "text", @readonly = "true" } })
                            </div>*@

                        <div class="form-group">
                            @Html.Label("Fornecedor", htmlAttributes: new { @class = "col-md-1", @style = "margin-top: 3px;" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(p => p.PurchaseOrder.ProviderPurchaseOrder.CompanyNameOrder, new { @class = "form-control", @readonly = "true" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Validade", htmlAttributes: new { @class = "col-md-1", @style = "margin-top: 3px;" })
                            <div class="col-md-2">
                                @{ DateTime dataEmissao = Model.PurchaseOrder.ValidateDate; }
                                @Html.TextBoxFor(p => p.PurchaseOrder.ValidateDate, new { @Value = dataEmissao == DateTime.MinValue ? DateTime.Now.ToShortDateString() : dataEmissao.ToShortDateString(), @class = "datepicker form-control", @readonly = "true" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Valor Total", htmlAttributes: new { @class = "col-md-1", @style = "margin-top: 3px;" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(p => p.PurchaseOrder.TotalValue, new { @class = "form-control", @readonly = "true" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Nota Fiscal", htmlAttributes: new { @class = "col-md-1", @style = "margin-top: 3px;" })
                            <div class="col-md-2">
                                @Html.TextBoxFor(p => p.PurchaseOrder.InvoiceNumber, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <br>
                            @{ Html.RenderAction("ConferenciaGetListaProdtos", "Compras", new { OrderID = Model.PurchaseOrder.Id });
                            }
                            @Html.Hidden("itensPedido", "", new { id = "itensPedido" });
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-5">
                            <input type="submit" value="Receber Pedido" onclick="return IniciarInclusaoPedido();" class="btn btn-primary" style="font-size: 0.8em;" id="btnReceberPedido" />
                            <input type="file" id="FileUpload1" />
                            <input type="button" value="Importar XML NFe" onclick="" class="btn btn-primary" style="font-size: 0.8em;" id="btnImportarXmlNFe" />
                        </div>
                    </div>

                                }
            </div>
        </div>
    </div>
</div><!-- BOX -->
@*@section top_modals{

    }*@
<script type="text/javascript">
    // Run Select2 on element
    function Select2Test() {
        //  $("#Pedido_CustomerID").select2();
        //  $("#Pedido_ContactID").select2();
        //$(".selddl").select2();
    }

    var editor;

    $(document).ready(function () {
        // Load TimePicker plugin and callback all time and date pickers
        LoadTimePickerScript(AllTimePickers);
        // Create jQuery-UI tabs
        $("#tabs").tabs();
        $("#btnAvancar").click(function () {
            var active = $("#tabs").tabs("option", "active");
            $("#tabs").tabs("option", "active", active + 1);
        });

        $("#btnVoltar").click(function () {
            var active = $("#tabs").tabs("option", "active");
            $("#tabs").tabs("option", "active", active - 1);
        });

        // Sortable for elements
        $(".sort").sortable({
            items: "div.col-sm-2",
            appendTo: 'div.box-content'
        });
        // Droppable for example of trash
        $(".drop div.col-sm-2").draggable({ containment: '.dropbox' });
        $('#trash').droppable({
            drop: function (event, ui) {
                $(ui.draggable).remove();
            }
        });
        var icons = {
            header: "ui-icon-circle-arrow-e",
            activeHeader: "ui-icon-circle-arrow-s"
        };
        // Make accordion feature of jQuery-UI
        $("#accordion").accordion({ icons: icons });
        // Create UI spinner
        $("#ui-spinner").spinner();
        // Add Drag-n-Drop to boxes

        // Load script of Select2 and run this
        LoadSelect2Script(Select2Test);

        //$("#Pedido_CustomerID").select2();
        //$("#Pedido_ContactID").select2();

        WinMove();

        //$(window).on('shown.bs.modal', function () {
        //    $('.modal-backdrop').removeClass();
        //})
    });

</script>
